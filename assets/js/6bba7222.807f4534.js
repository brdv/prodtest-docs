"use strict";(self.webpackChunkprodtest=self.webpackChunkprodtest||[]).push([[7],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var s=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},i=Object.keys(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=s.createContext({}),c=function(e){var t=s.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return s.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),f=n,k=d["".concat(a,".").concat(f)]||d[f]||u[f]||i;return r?s.createElement(k,o(o({ref:t},p),{},{components:r})):s.createElement(k,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7003:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=r(7462),n=(r(7294),r(3905));const i={title:"Project Structure",sidebar_position:1},o=void 0,l={unversionedId:"demo/project-structure/index",id:"demo/project-structure/index",title:"Project Structure",description:"This pages shows the project structure and describes what files to find where.",source:"@site/docs/demo/project-structure/index.md",sourceDirName:"demo/project-structure",slug:"/demo/project-structure/",permalink:"/prodtest-docs/demo/project-structure/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Project Structure",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Demo Project",permalink:"/prodtest-docs/category/demo-project"},next:{title:"Technical detail",permalink:"/prodtest-docs/demo/technical-detail/"}},a={},c=[{value:"root  ./ ",id:"root---",level:2},{value:"GitHub config files  ./.github ",id:"github-config-files--github-",level:2},{value:"VSCode config files  ./.vscode ",id:"vscode-config-files--vscode-",level:2},{value:"Kubernetes manifests  ./kubernetes ",id:"kubernetes-manifests--kubernetes-",level:2},{value:"Scripts  ./scripts ",id:"scripts--scripts-",level:2},{value:"docker  ./scripts/docker ",id:"docker--scriptsdocker-",level:3},{value:"kubernetes  ./scripts/kubernetes ",id:"kubernetes--scriptskubernetes-",level:3},{value:"Source code  ./src ",id:"source-code--src-",level:2},{value:"RegisterService",id:"registerservice",level:3},{value:"RegisterService.Tests",id:"registerservicetests",level:3}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,s.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This pages shows the project structure and describes what files to find where.\nThe project consists of the followin files"),(0,n.kt)("h2",{id:"root---"},"root ","[ ./ ]"),(0,n.kt)("p",null,"This is the root folder of the project. You can find all folders listed below here. Besides those folders, the following files are stored in the root folder."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},".gitignore\nFile that tells git what to ignore."),(0,n.kt)("li",{parentName:"ul"},"README.md\nReadme documentation file."),(0,n.kt)("li",{parentName:"ul"},"stryker-config.json\nConfiguration file for ",(0,n.kt)("a",{parentName:"li",href:"https://stryker-mutator.io"},"stryker"),".")),(0,n.kt)("h2",{id:"github-config-files--github-"},"GitHub config files ","[ ./.github ]"),(0,n.kt)("p",null,"The GitHub folder currently contains only workflow files. These files describe CI/CD jobs to be run, what to run and when to do it."),(0,n.kt)("h2",{id:"vscode-config-files--vscode-"},"VSCode config files ","[ ./.vscode ]"),(0,n.kt)("p",null,"The VSCode folder contains two files:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"tasks.json")),(0,n.kt)("p",{parentName:"li"},"Specifies VSCode tasks for the project. Tasks such as 'test', 'build' and 'watch'.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"launch.json")),(0,n.kt)("p",{parentName:"li"},"Contains the settings to use the VSCode debugger."))),(0,n.kt)("h2",{id:"kubernetes-manifests--kubernetes-"},"Kubernetes manifests ","[ ./kubernetes ]"),(0,n.kt)("p",null,"This folder contains all kubernetes manifests."),(0,n.kt)("h2",{id:"scripts--scripts-"},"Scripts ","[ ./scripts ]"),(0,n.kt)("p",null,"This folder contains scripts for the demo-project. Currently this folder contains two subfolders and a script."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"simulate_api_calls.sh")),(0,n.kt)("p",{parentName:"li"},"This script can be used to run a specified (default 500) number of POST requests on the API to use for testing purposes."))),(0,n.kt)("h3",{id:"docker--scriptsdocker-"},"docker ","[ ./scripts/docker ]"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"latest.deploy.sh")),(0,n.kt)("p",{parentName:"li"},"This script will build and deploy a 'latest'-tagged image of the RegisterService to the docker registry.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"next.deploy.sh")),(0,n.kt)("p",{parentName:"li"},"This script will build and deploy a 'vnext'-tagged image of the RegisterService to the docker registry."))),(0,n.kt)("h3",{id:"kubernetes--scriptskubernetes-"},"kubernetes ","[ ./scripts/kubernetes ]"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"setup-darklaunch.sh")),(0,n.kt)("p",{parentName:"li"},"This script applies all resources needed for the dark launch to a default kubernetes cluster.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"cleanup.sh")),(0,n.kt)("p",{parentName:"li"},"This script deletes all resources that are applied by the script above."))),(0,n.kt)("h2",{id:"source-code--src-"},"Source code ","[ ./src ]"),(0,n.kt)("p",null,"This folder contains all source code for the ProdtestDemo project. It contains the following subfolders:"),(0,n.kt)("h3",{id:"registerservice"},"RegisterService"),(0,n.kt)("p",null,"This folder contains the source code for the RegisterService."),(0,n.kt)("h3",{id:"registerservicetests"},"RegisterService.Tests"),(0,n.kt)("p",null,"This folder contains the tests for the RegisterService."))}u.isMDXComponent=!0}}]);