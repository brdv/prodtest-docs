"use strict";(self.webpackChunkprodtest=self.webpackChunkprodtest||[]).push([[13],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var o=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,i=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=o.createContext({}),d=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=d(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(r),h=i,m=u["".concat(c,".").concat(h)]||u[h]||p[h]||n;return r?o.createElement(m,a(a({ref:t},l),{},{components:r})):o.createElement(m,a({ref:t},l))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var d=2;d<n;d++)a[d]=r[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9545:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var o=r(7462),i=(r(7294),r(3905));const n={title:"Technical detail",sidebar_position:1},a=void 0,s={unversionedId:"demo/technical-detail/index",id:"demo/technical-detail/index",title:"Technical detail",description:"This page gives an overview of the components of the demo project.",source:"@site/docs/demo/technical-detail/index.md",sourceDirName:"demo/technical-detail",slug:"/demo/technical-detail/",permalink:"/prodtest-docs/demo/technical-detail/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Technical detail",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Project Structure",permalink:"/prodtest-docs/demo/project-structure/"},next:{title:"OrderService",permalink:"/prodtest-docs/demo/technical-detail/order-service"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Schematic overview",id:"schematic-overview",level:2},{value:"Proxy (Traefik)",id:"proxy-traefik",level:3},{value:"OrderService",id:"orderservice",level:3},{value:"Message Queue (RabbitMQ)",id:"message-queue-rabbitmq",level:3},{value:"KitchenService",id:"kitchenservice",level:3},{value:"Database (MySQL)",id:"database-mysql",level:3}],l={toc:d};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This page gives an overview of the components of the demo project."),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Documentation about testing in production is neat. Know what's even better? Implementation examples! This is the reason the demo project was brought into existence. This project shows how a the documented ways of testing in production can be implemented in real-world projects."),(0,i.kt)("p",null,"This section will give an overview of the software components in the afore mentioned demo project."),(0,i.kt)("h2",{id:"schematic-overview"},"Schematic overview"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Component overview",src:r(6457).Z,width:"752",height:"467"})),(0,i.kt)("p",null,"As of right now, the project consists of five components: the Proxy (",(0,i.kt)("a",{parentName:"p",href:"https://traefik.io/"},"Traefik"),"), the order service, a ",(0,i.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/ibm-mq/8.0?topic=overview-introduction-message-queuing"},"Message Queue"),", the kitchen service and a database (MySQL)."),(0,i.kt)("h3",{id:"proxy-traefik"},"Proxy (Traefik)"),(0,i.kt)("p",null,"The proxy is the only component that can be accessed from outside of the cluster. The job of the proxy is to evaluate the request and forward it to the appropriate service."),(0,i.kt)("h3",{id:"orderservice"},"OrderService"),(0,i.kt)("p",null,"The order service is the first entrypoint for requests. It is this service that handles orders from hypothetical customers. It consists of an API that has three endpoints. Read more about this service ",(0,i.kt)("a",{parentName:"p",href:"/prodtest-docs/demo/technical-detail/order-service"},"here"),"."),(0,i.kt)("h3",{id:"message-queue-rabbitmq"},"Message Queue (RabbitMQ)"),(0,i.kt)("p",null,"The Message Queue (MQ) is a way to allow for asynchronous communication between two services. In the demo project, it is used for communication between the order- and kitchen services. More about the message queue can be found ",(0,i.kt)("a",{parentName:"p",href:"/prodtest-docs/demo/technical-detail/message-queue"},"here"),"."),(0,i.kt)("h3",{id:"kitchenservice"},"KitchenService"),(0,i.kt)("p",null,"The kitchen service is a worker application. It subscribes on the queue and waits for new orders to arrive. Once an order is published, it will prepare the orders and store handled orders in the database. Read more about this service ",(0,i.kt)("a",{parentName:"p",href:"/prodtest-docs/demo/technical-detail/kitchen-service"},"here"),"."),(0,i.kt)("h3",{id:"database-mysql"},"Database (MySQL)"),(0,i.kt)("p",null,"The database is a MySQL database that is used to store the data generated by the kitchen service. It is quite a basic implementation, however, data separation of various version is important. A description about how this is implemented, can be found ",(0,i.kt)("a",{parentName:"p",href:"/prodtest-docs/demo/technical-detail/data-separation#database"},"here"),"."))}p.isMDXComponent=!0},6457:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/components-overview-b0defb0e1c3b424ccd6548b788882735.png"}}]);