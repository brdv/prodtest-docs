"use strict";(self.webpackChunkprodtest=self.webpackChunkprodtest||[]).push([[7],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,h=d["".concat(l,".").concat(f)]||d[f]||u[f]||s;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7003:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={title:"Project Structure",sidebar_position:0},i=void 0,a={unversionedId:"demo/project-structure/index",id:"demo/project-structure/index",title:"Project Structure",description:"This pages shows the project structure and describes what files to find where.",source:"@site/docs/demo/project-structure/index.md",sourceDirName:"demo/project-structure",slug:"/demo/project-structure/",permalink:"/prodtest-docs/demo/project-structure/",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Project Structure",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Demo Project",permalink:"/prodtest-docs/category/demo-project"},next:{title:"Technical detail",permalink:"/prodtest-docs/demo/technical-detail/"}},l={},c=[{value:"root  ./ ",id:"root---",level:2},{value:"GitHub config files  ./.github ",id:"github-config-files--github-",level:2},{value:"VSCode config files  ./.vscode ",id:"vscode-config-files--vscode-",level:2},{value:"Kubernetes manifests  ./manifests ",id:"kubernetes-manifests--manifests-",level:2},{value:"Scripts  ./scripts ",id:"scripts--scripts-",level:2},{value:"docker  ./scripts/docker ",id:"docker--scriptsdocker-",level:3},{value:"kubernetes  ./scripts/kubernetes ",id:"kubernetes--scriptskubernetes-",level:3},{value:"Source code  ./src ",id:"source-code--src-",level:2},{value:"Common",id:"common",level:3},{value:"Services",id:"services",level:3},{value:"Kitchen",id:"kitchen",level:4},{value:"Order",id:"order",level:4}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This pages shows the project structure and describes what files to find where.\nThe project consists of the following files"),(0,o.kt)("h2",{id:"root---"},"root ","[ ./ ]"),(0,o.kt)("p",null,"This is the root folder of the project. You can find all folders listed below here. Besides those folders, the following files are stored in the root folder."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},".gitignore\nFile that tells git what to ignore."),(0,o.kt)("li",{parentName:"ul"},"README.md\nReadme documentation file."),(0,o.kt)("li",{parentName:"ul"},"stryker-config.json\nConfiguration file for ",(0,o.kt)("a",{parentName:"li",href:"https://stryker-mutator.io"},"stryker"),".")),(0,o.kt)("h2",{id:"github-config-files--github-"},"GitHub config files ","[ ./.github ]"),(0,o.kt)("p",null,"The GitHub folder currently contains only workflow files. These files describe CI/CD jobs to be run, what to run and when to do it."),(0,o.kt)("h2",{id:"vscode-config-files--vscode-"},"VSCode config files ","[ ./.vscode ]"),(0,o.kt)("p",null,"The VSCode folder contains two files:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"tasks.json")),(0,o.kt)("p",{parentName:"li"},"Specifies VSCode tasks for the project. Tasks such as 'test', 'build' and 'watch'.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"launch.json")),(0,o.kt)("p",{parentName:"li"},"Contains the settings to use the VSCode debugger."))),(0,o.kt)("h2",{id:"kubernetes-manifests--manifests-"},"Kubernetes manifests ","[ ./manifests ]"),(0,o.kt)("p",null,"This folder contains all kubernetes manifests."),(0,o.kt)("h2",{id:"scripts--scripts-"},"Scripts ","[ ./scripts ]"),(0,o.kt)("p",null,"This folder contains scripts for the demo-project. Currently this folder contains two subfolders and a script."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"simulate_api_calls.sh")),(0,o.kt)("p",{parentName:"li"},"This script can be used to run a specified (default 500) number of POST requests on the API to use for testing purposes."))),(0,o.kt)("h3",{id:"docker--scriptsdocker-"},"docker ","[ ./scripts/docker ]"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"build-prodtest-images.sh")),(0,o.kt)("p",{parentName:"li"},"Script to build the docker images of the Kitchen- and OrderService."))),(0,o.kt)("h3",{id:"kubernetes--scriptskubernetes-"},"kubernetes ","[ ./scripts/kubernetes ]"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"cleanup.sh")),(0,o.kt)("p",{parentName:"li"},"This script deletes all resources that are applied by the script above.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"pfw-rabbitmq.sh")),(0,o.kt)("p",{parentName:"li"},"Script to open up the RabbitMQ dashboard on localhost:15672")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"setup-infra.sh")),(0,o.kt)("p",{parentName:"li"},"Sets up the infrastructure components of the project in kubernetes cluster. Things like the proxy, database and RabbitMQ instance.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"setup-darklaunch.sh")),(0,o.kt)("p",{parentName:"li"},"This script applies all resources needed for the dark launch to a default kubernetes cluster."))),(0,o.kt)("h2",{id:"source-code--src-"},"Source code ","[ ./src ]"),(0,o.kt)("p",null,"This folder contains all source code for the ProdtestDemo project. It contains the following subfolders:"),(0,o.kt)("h3",{id:"common"},"Common"),(0,o.kt)("p",null,"This folder contains the code for shared resources for all services in the repository."),(0,o.kt)("h3",{id:"services"},"Services"),(0,o.kt)("p",null,"This folder contains the code for all services of the demo project. The subfolders are:"),(0,o.kt)("h4",{id:"kitchen"},"Kitchen"),(0,o.kt)("p",null,"Contains the projects for the KitchenService: the KitchenService itself and the tests for the KitchenService."),(0,o.kt)("h4",{id:"order"},"Order"),(0,o.kt)("p",null,"Contains the projects for the OrderService: the Order API and the tests therefore."))}u.isMDXComponent=!0}}]);